name: Kafka Sink CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Compile, test and create package
        run: mvn -B clean verify package
      - name: Coverage report
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/**/target/reports/jacoco.xml
          token: ${{ github.token }}
          title: Code Coverage
          update-comment: true
          min-coverage-overall: 40
          min-coverage-changed-files: 70
          pass-emoji: ':white_check_mark:'
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: target

  image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging

#  sonar-scan:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Analyze with SonarQube
#        # You can pin the exact commit or the version.
#        # uses: SonarSource/sonarqube-scan-action@v1.1.0
#        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
#        env:
#          GITHUB_TOKEN: ${{ github.token }}  # Needed to get PR information
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
#        with:
#          # Additional arguments for the sonarcloud scanner
#          args:
#            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
#            # mandatory
#            -Dsonar.projectKey=
#            # Comma-separated paths to directories containing main source files.
#            #-Dsonar.sources= # optional, default is project base directory
#            # When you need the analysis to take place in a directory other than the one from which it was launched
#          #-Dsonar.projectBaseDir= # optional, default is .
#          # Comma-separated paths to directories containing test source files.
#          #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
#          # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
#          #-Dsonar.verbose= # optional, default is false

#  func-test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
#      - uses: actions/upload-artifact@v4
#        with:
#          name: Package
#          path: staging
