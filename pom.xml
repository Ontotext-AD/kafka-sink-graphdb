<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ontotext.graphdb.kafka</groupId>
	<artifactId>kafka-sink-graphdb</artifactId>
	<version>2.0.2</version>
	<name>GraphDB Kafka Sink Connector</name>
	<description>Kafka Sink Connector for RDF update streaming to GraphDB</description>

	<properties>
        <kafka.version>3.8.0</kafka.version>
		<slf4j.version>2.0.16</slf4j.version>
        <jackson.version>2.15.3</jackson.version>
        <java.level>11</java.level>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Keep rdf4j identical to GDB's version -->
		<rdf4j.version>4.3.12</rdf4j.version>
		<confluent.connect.plugin.version>0.12.0</confluent.connect.plugin.version>
        <avro.version>1.11.3</avro.version>
		<dependency.check.version>8.4.3</dependency.check.version>
		<jetty.version>12.0.14</jetty.version>
		<apache.maven.version>3.9.6</apache.maven.version>
		<eclipse.collections.version>11.1.0</eclipse.collections.version>
		<junit.jupiter.version>5.10.1</junit.jupiter.version>
		<maven.shared.utils.version>3.4.2</maven.shared.utils.version>
		<maven.artifact.transfer.version>0.13.1</maven.artifact.transfer.version>
		<httpclient.osgi.version>4.5.14</httpclient.osgi.version>
		<commons.logging.version>1.2</commons.logging.version>
		<json.version>20231013</json.version>
		<mockserver.junit.jupiter.version>5.15.0</mockserver.junit.jupiter.version>
		<assertj.version>3.24.2</assertj.version>
		<sisu.guava.version>0.11.1</sisu.guava.version>
		<apache.maven.plugins.version>3.1.1</apache.maven.plugins.version>
		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<commons.collections.version>4.4</commons.collections.version>
		<maven.shade.plugin.version>3.0.0</maven.shade.plugin.version>
		<maven.surefire.plugin.version>3.0.0-M3</maven.surefire.plugin.version>
		<mockito.version>5.2.0</mockito.version>
		<system-stubs-jupiter.version>2.1.3</system-stubs-jupiter.version>

		<docker.maven.version>0.40.2</docker.maven.version>
		<dockerImageTag>${project.version}</dockerImageTag>

		<internal.repo>https://maven.ontotext.com/content/repositories/owlim-releases</internal.repo>
		<snapshots.repo>https://maven.ontotext.com/content/repositories/owlim-snapshots</snapshots.repo>

		<!-- Empty defaults to keep things happy, argLine can be overridden on command line,
            extraArgLine may be overridden by one of the profiles. -->
		<argLine />
		<extraArgLine />
	</properties>

	<packaging>jar</packaging>

	<build>
		<finalName>graphdb-kafka-plugin</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${java.level}</source>
					<target>${java.level}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven.shade.plugin.version}</version>
				<configuration>
					<artifactSet>
						<includes>
							<include>org.slf4j:*</include>
							<include>org.apache.kafka:kafka-clients:*</include>
							<include>org.apache.kafka:connect-api:*</include>
							<include>org.apache.httpcomponents:*</include>
							<include>commons-io:commons-io:* </include>
							<include>org.json:*</include>
							<include>com.github.jsonld-java:*</include>
							<include>com.fasterxml.jackson.core:*</include>
							<include>org.eclipse.rdf4j:* </include>
						</includes>
					</artifactSet>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<argLine>${argLine} ${extraArgLine}</argLine>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.plugin.version}</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<arguments>-Dmaven.javadoc.skip=true</arguments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${apache.maven.plugins.version}</version>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<descriptors>
						<descriptor>graphdb-plugin.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>package-plugin</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${apache.maven.plugins.version}</version>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${dependency.check.version}</version>
				<configuration>
					<failBuildOnCVSS>7</failBuildOnCVSS>
					<skipProvidedScope>true</skipProvidedScope>
				</configuration>
				<executions>
					<execution>
						<phase>none</phase>
						<goals>
							<goal>aggregate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.version}</version>
				<configuration>
					<images>
						<image>
							<alias>${project.artifactId}-container</alias>
							<name>docker-registry.ontotext.com/${project.artifactId}:${dockerImageTag}</name>
							<build>
								<buildOptions>
									<nocache>true</nocache>
									<pull>true</pull>
								</buildOptions>
								<dockerFile>${project.basedir}/Dockerfile</dockerFile>
								<args>
									<version>${project.version}</version>
									<mavenDir>maven/</mavenDir>
								</args>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<!-- Repository needed for GraphDB artifacts and some support artifacts -->
		<repository>
			<id>owlim-releases</id>
			<name>GraphDB Releases</name>
			<url>https://maven.ontotext.com/repository/owlim-releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-core</artifactId>
				<version>${apache.maven.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-settings</artifactId>
				<version>${apache.maven.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-compat</artifactId>
				<version>${apache.maven.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.shared</groupId>
				<artifactId>maven-shared-utils</artifactId>
				<version>${maven.shared.utils.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.shared</groupId>
				<artifactId>maven-artifact-transfer</artifactId>
				<version>${maven.artifact.transfer.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-io</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.ee10</groupId>
				<artifactId>jetty-ee10-servlet</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.ee10</groupId>
				<artifactId>jetty-ee10-servlets</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-client</artifactId>
				<version>${jetty.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <version>${kafka.version}</version>
        </dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient-osgi</artifactId>
			<version>${httpclient.osgi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>connect-runtime</artifactId>
			<version>${kafka.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons.collections.version}</version>
		</dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-maven-plugin</artifactId>
            <version>${confluent.connect.plugin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-http-client</artifactId>
            <version>${rdf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-repository-http</artifactId>
            <version>${rdf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-repository-manager</artifactId>
            <version>${rdf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-repository-sail</artifactId>
            <version>${rdf4j.version}</version>
        </dependency>
		<dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons.logging.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-rio-nquads</artifactId>
            <version>${rdf4j.version}</version>
        </dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-ntriples</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-trig</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-trix</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-n3</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-turtle</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-jsonld</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-rdfxml</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-rdfjson</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-binary</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-sail-memory</artifactId>
            <version>${rdf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-sail-api</artifactId>
            <version>${rdf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-maven-plugin</artifactId>
            <version>${avro.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections-api</artifactId>
            <version>${eclipse.collections.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
            <version>${eclipse.collections.version}</version>
        </dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${json.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-junit-jupiter</artifactId>
			<version>${mockserver.junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.sonatype.sisu</groupId>
			<artifactId>sisu-guava</artifactId>
			<version>${sisu.guava.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>uk.org.webcompere</groupId>
			<artifactId>system-stubs-jupiter</artifactId>
			<version>${system-stubs-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<additionalOptions>-Xdoclint:none</additionalOptions>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!--
                If test.java is set then we run the tests with a different Java distribution.
                The property test.java must point to a Java home directory.
                The test Java is assumed to be version 9+ so the appropriate arguments are added to surefire.
             -->
			<id>test-java</id>
			<activation>
				<property>
					<name>test.java</name>
				</property>
			</activation>
			<properties>
				<extraArgLine>--add-exports jdk.management.agent/jdk.internal.agent=ALL-UNNAMED</extraArgLine>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${maven.surefire.plugin.version}</version>
							<configuration>
								<jvm>${test.java}/bin/java</jvm>
							</configuration>
						</plugin>

					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<!-- Adds Java 9+ -add-exports option to surefire if building on Java 9+ -->
			<id>java9plus-build</id>
			<activation>
				<jdk>[9,)</jdk>
			</activation>
			<properties>
				<extraArgLine>--add-exports jdk.management.agent/jdk.internal.agent=ALL-UNNAMED</extraArgLine>
			</properties>
		</profile>
	</profiles>

	<distributionManagement>
		<repository>
			<id>internal</id>
			<name>GraphDB Releases repository</name>
			<url>${internal.repo}</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>GraphDB Snapshots repository</name>
			<url>${snapshots.repo}</url>
		</snapshotRepository>
	</distributionManagement>

	<scm>
		<connection>scm:git:git@github.com:Ontotext-AD/kafka-sink-graphdb.git</connection>
		<developerConnection>scm:git:git@github.com:Ontotext-AD/kafka-sink-graphdb.git</developerConnection>
		<url>https://github.com/Ontotext-AD/kafka-sink-graphdb</url>
		<tag>2.0.2</tag>
	</scm>

</project>
